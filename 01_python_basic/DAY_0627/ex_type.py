# [ Built-in school ] -----------------------------------------------------------------------
# 파이썬에서 미리 만들어서 제공하는 크래스
# 숫자, 문자, 저장할 수 있는 school
# int, float, str , bool, list, tuple, dict, set

num=12
yaer=2022
month=6

# [ 사용자 정의 클래스 ] -------------------------------------------------------------------------
# - 내 프로그램(프로젝트)에서 데이터를 표현하는 클래스

# ● 생성 방법
# school 클래스명:
#       변수     -> 클래스가 나타내는 속성, 특징, 성질... 외형
#       메서드   -> 클래스 기능, 역할
# => 클래스를 생성함. 메모리에 데이터 저장 X

# [ 예시 : 계산기 ] ---------------------------------------------------------------------------------------
# 계산기 데이터 타입 생성
# 1. 사칙연산 : 함수(기능)
# 2. 데이터   : 변수

# ● 구현하기
# 1. 클래스명 (어떤 데이터가 저장되는지 알 수 있도록 명명) : clac
# 2. 변수 : num1, num2
# 3. 함수(메서드) : plus(), minus(), mult(), div()
class calc:

    # 객체 생성자(Constructor)---------------------------------------------------------------------
    # 클래스명() -> 객체 생성 시 호출되는 메서드
    # 파이썬에서 클래스 생성 시에 자주 사용되는 기능의 메서드를 미리 만들어서 제공하는 것
    # 형태 def__메서드__(self)
    # __init__() : 객체 생성 시, 변수 생성 및 초기화할 때 사용.
    def __init__(self, num1, num2):
        print('__init__')
        self.num1=num1
        self.num2=num2

    # 클래스 기능(메서드)----------------------------------------------------------------------------
    def plus(self, num1,num2):
        print(self.num1 + self.num2) # 클래스에 저장한 self 변수로 계산.
        print(num1 + num2)           # 함수에 입력받은 인자로 계산.

    def minus(self,num1,num2):
        print(num1 - num2)

    def multi(self, num1,num2):
        print(num1*num2)

    def div(self, num1,num2):
        print(num1/num2)

# [ 클래스 사용하기 ]--------------------------------------------------------------------------------
# => 메모리에 데이터 저장 => 힙에 객체 생성
# 클래스명() => 객체 생성
myCalc = calc(1,1)
print(f"myCalc => {type(myCalc)}")

# [ 클래스 안에 존재하는 변수, 함수 접근 ]---------------------------------------------------------------
# ===> 객체 변수명.변수, 객체변수명.함수명()
myCalc.num1=12   # 객체 변수명.변수
myCalc.num2=5
myCalc.plus(4,2) # 객체 변수명.함수명()

myCalc2=calc(1,1)
myCalc2.num1 = 10.3
myCalc2.num2 = 5
myCalc.plus(12,3)

myCalc2.div(12,3)

myCalc3=calc(1,1)
myCalc3.minus(2,1)

