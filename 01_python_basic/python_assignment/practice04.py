# [ 리스트와 튜플과 자료형 이해 220523] ------------------------------
# 1. 리스트 자료형(list) 다루는 문제입니다.
# 1-1. 비어 있는 리스트에 10, 40, “홍길동”, False, 40, False 를 저장하는 코드를 작성하세요.

b=[]
b.append((10, 40,"홍길동", False, 40, False))
a=[]
print(b)
a.append(10)
a.append(40)
a.append("홍길동")
a.append(False)
a.append(40)
a.append(False)
print(a)
# append는 한번에 1개씩만 추가 가능 (숫자, 문자, 리스트, 튜플 상관 없이)
# --------------------------------------------------------------------------
# 1-2. 문제 1-1에서 생성된 데이터서 False의 인덱스를 출력 후 타입도 출력하세요.
print(a.index(False), type(a.index(False)))
#---------------------------------------------------------------------------
# 1-3. nums=[1,6,3,9,10]과 datas=[‘a’, ‘b’, ‘f’, ‘z’] 데이터의 덧셈 결과를 출력하세요.
nums=[1,6,3,9,10]
datas=['a','b','f','z']
print(nums+(datas))
# 리스트 더하기 리스트 : 각 리스트 요소들이 하나의 리스트에 합쳐짐
#---------------------------------------------------------------------------
# 1-4. nums=[1,6,3,9,10]과 숫자 10을 곱셈한 결과를 출력하세요.
print(nums*10)
# =리스트 곱하기 숫자 : 리스트 요소들이 곱한 숫자 만큼 추가
#---------------------------------------------------------------------------
# 1-5. 문제 1-3의 nums에 데이터를 사용하여 아래 요청사항을 코드로 작성해주세요.
#  - 모든 요소를 거꾸로 뽑아서 출력
#  - 3의 배수 번째 요소만 출력
#  - 짝수번째 요소만 출력
nums.reverse()
print(nums)
print(nums[2::3])
print(nums[1::2])
#---------------------------------------------------------------------------
# 1-6. 아래 데이터에 대한 다양한 처리 코드를 작성하세요.
nums=[ ]
nums.append	( 10 )
nums.append	( 3 )
nums.append	( 91 )
print( nums )

nums.remove(3)
print(nums)
# nums.remove(100) -->100 없어서 에러남.

nums.insert(1, 24) #---> 1번 인덱스에 24 추가됨.
print(nums)
# ---------------------------------------------------------------------------
# 1-7. 아래 데이터에 대한 다양한 처리 코드를 작성하세요.
nums=[1,2,3,1,2,3,5,6,7,3]
# * nums 변수의 데이터 개수 출력 코드
print(len(nums))
# * 요소값 3의 개수 출력 코드
print(nums.count(3))
# * 요소값 6의 인덱스 출력 코드
print(nums.index(6))
# * 마지막 요소를 삭제하는 코드
print(nums.pop()) #---> 빈 칸 일 때, 마지막 요소를 리턴한 뒤 제거.
print(nums)
 # * 3번째 요소를 삭제하는 코드
print(nums.pop(2)) #---> 숫자 입력 시, 그 인덱스 요소 출력 후 지움.
print(nums)
del nums[2] #---> 숫자 입력 시. 그 인덱스 지움.
print(nums)
# 1-8. 아래 데이터에 대한 다양한 처리 코드를 작성하세요.
nums=[1,2,3,1,2,3]
data=['a','c']
# * 2개의 리스트를 합치는 코드 2가지 작성하세요.
print(nums+data) # 방법 1) +
nums.extend(data) # 방법 2) extend
print(nums)
nums.append(data) # append는 리스트 통채로 들어감
print(nums)

# 2. 튜플 자료형(tuple)을 다루는 문제입니다.
# 2-1. 튜플 자료형의 특징에 대해서 설명해 주세요.
# 수정, 삭제가 불가능하다.( 변경하면 안되는 중요한 정보에 사용)
# 소괄호를 사용한다. 괄호를 사용하지 않아도 동작함.

# 2-2. 10, 30, 89, 10, 23, 1, 2, 7, 11 데이터를 변경이 불가능한 형태로 하나의 변수명에 저장해 출력해 주세요. 조건) 2가지 방식으로 코드 작성해 주세요.
a=(10, 30, 89, 10, 23, 1, 2, 7, 11)
b=10, 30, 89, 10, 23, 1, 2, 7, 11
print("튜플a: ",a, type(a))
print(b, type(b))

# 2-3. 문제 2-2에서 자정된 데이터의 값을 읽어와서 출력해 주세요.
# - 모든 요소를 하나씩 출력
print(a[:])
# - 짝수번째 요소만 출력
print(a[1::2])
# - 3의 배수번째 요소만 출력
print(a[2::3])

# # 1. 내장 함수에 대한 문제입니다.
# 3-1. name=“Kim”,	age=12,	isOk=False,	jumsu=[10,98,76]의 타입을 출력하세요.
name='Kim'
age=12
isOk=False
jumsu=[10,98,76]
print(type(name),type(age),type(isOk),type(jumsu))

# 3-2. 1부터 10까지 범의의 데이터를 생성하는 코드를 작성하세요.
a= list(range(1,11))
print(a)

# 3-3. 입력에 관련 코드를 작성하세요.
# - 나이를 입력받는 코드를 작성하세요.
age=input("나이:")
# - 이름과 나이를 입력 받는 코드를 작성하세요.
info=input("이름") # 방법 1 :따로 따로 받기
info=input("나이")

info=input("이름, 나이") # 방법 2: split 사용
info= info.split(",")
print(info)

# 3-4. 1~1000사이의 숫자에서 7의 배수만 저장한 데이터를 만들어 주세요.
a=list(range(7,1001,7))
print(a)