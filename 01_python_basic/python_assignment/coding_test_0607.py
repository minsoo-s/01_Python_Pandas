Q_number=int(input("문제번호 입력(1~21):"))
if Q_number==1:
    # [ 1 ]
    # 3, 6, 9 게임을 파이썬으로 구현해 보세요.
    # 	-조건-
    # 	숫자를 int형 타입으로 input함수를 이용하여 입력받는다.
    # 	3, 6, 9 의 숫자가 있을 경우 X를 나타나게 한다.
    # 	입력받은 숫자가 1,000,000일 경우 1부터 1,000,000 까지에 해당하는 3,6,9를 아래
    # 	예시처럼 출력해준다.
    # [ A1 ]
    user=int(input("숫자 입력: "))
    num=list(range(1,user+1))
    result=[]
    count=0

    while count<len(num):

        if  "3" in str(num[count]) or "6" in str(num[count]) or "9" in str(num[count]):
            num[count]="X"
            result.append(num[count])
            count = count + 1
        else:
            result.append(num[count])
            count = count + 1

    print(result)
    # 막힌 부분) 1의 자리를 제외한 다른 자리에 3,6,9중 하나가 있을 경우도 X로 해야함.
    # 해결) if  "3" in str(num[count]) or "6" in str(num[count]) or "9" in str(num[count]):
    # -----------------------------------------------------------------------------------
elif Q_number == 2:
    # [ Q2 ]
    # 고무 공을 100 미터 높이에서 떨어뜨리는데, 이 공은 땅에 닿을 때마다 원래 높이의
    # 3/5 만큼 튀어오릅니다. 공이 열 번 튈 동안, 그때마다 공의 높이를 계산후 출력하세요.
    # [ A2 ]
    h=100
    jump=0
    while jump <10:
       jump=jump+1
       h=h*(3/5)
       print(f"{jump}번 째 높이: {h}[m]")
    #---------------------------------------------------------------------------------
elif Q_number == 3:
    # [ Q3 ]
    # 산책을 하는 도중 심부름을 하게 되었습니다. 현재 가지고 있는 금액과 심부름으로 구매한
    # 제품가격을 입력 받으세요. 그리고 아래 2가지 결과를 출력해 주세요.
    # 	3-1) ex) 거스름돈은 xxxx 원입니다.
    # 	3-2) ex) 거스름돈으로 오천원 지폐는[    ]장, 천원 지폐는 [   ]장을 받았습니다.
    # [ A3 ]
    money=int(input("보유 금액: "))
    price=int(input("제품 가격: "))
    result=money-price
    print(f"거스름돈은 {result}원입니다.")
    five=result//5000
    one=(result%5000)//1000
    print(f"거스름돈으로 오천원 지폐[{five}장, 천원 지폐는 [{one}]장을 받았습니다.")
    #-----------------------------------------------------------------------------
elif Q_number == 4:
    # [ Q4 ]
    # 밀리세컨드는 1초를 1000으로 나눈 시간으로 밀리세컨드(ms)를 입력 받아서 시-분-초를
    # 변환하여 출력하는 코드를 작성하세요.
    # [ A4 ]
    ms=int(input("밀리세컨드 입력:"))
    hour=ms//(1000*60*60)
    min=(ms%(1000*60*60))//(1000*60)
    sec=(ms%(1000*60*60)%(1000*60))//1000
    print(f'{ms}[ms]= {hour}시 {min}분 {sec}초')
    # 1sec=ms/1000
    # 1min=sec*60=ms/(1000*60)
    # 1hour=min*60=ms/(1000*60*60)
    # 3666000
    # 막힌 부분) sec가 계산 안됨
    # 해결) sec=(min%(1000*60))//1000
    # ---> sec=(ms%(1000*60*60)%(1000*60))//1000
    #      'hour 나누고 남은값'을 'min 나누고 남은값' 을 sec로 나눔.
    # ----------------------------------------------------------------------------
elif Q_number == 5:
    # [ Q5 ]
    # 월(Month)을 입력 받아 해당 월(Month)의 계절을 출력하는 코드를 작성하세요.
    # 단, 월(Month)에 해당하지 않는 숫자 입력 시 “잘못된 데이터입니다” 출력요망
    # [ A5 ]
    month=int(input("월 입력: "))
    while(True):
        if month == 3 or month == 4 or month == 5:
            print(f"{month}월은 봄입니다.")
            break
        elif month == 6 or month == 7 or month == 8:
            print(f"{month}월은 여름입니다.")
            break
        elif month == 9 or month == 10 or month == 11:
            print(f"{month}월은 가을입니다.")
            break
        elif month == 12 or month == 1 or month == 2:
            print(f"{month}월은 겨울입니다.")
            break
        else:
            print("잘못된 데이터입니다.")
            month = int(input("월 입력: "))
    # 막힌 부분) 조건마다 무한반복 출력됨
    # 해결) 끝나는 부분은 break, 다시 입력받아야 하는 부분은 input 설정해줄 것!
    #---------------------------------------------------------------------------
elif Q_number == 6:
    # [ Q6 ]
    # 1과 자기 자신만을 약수로 가지는 수를 소수(prime number)라 한다.
    # 입력 받은 숫자 범위에서 소수만 출력하는 코드를 작성하세요.
    # [ A6 ]
    num=int(input("숫자 입력: "))
    def is_prime(num):
        for i in range(2,num): # 소수 판별: 나를 제외한 숫자로 나웠을 때 나머지 0 이면 False
            if num % i==0:
                return False
        return True # return은 if와 같은 세로라인에 들어가지 않음. 그 위치는 if, elif, else만 들어감.
    def true_prime(num):
        result=[]
        for i in range(2,num+1):
            if is_prime(i):
                result.append(i)
        print(result)

    true_prime(num)
    # 막힌 부분) 증가 해야 하는 변수가 2개라 막힘. result 위치를 if세로라인에 둬서 제대로 된 계산이 안나옴.
    # 해결)정의함수 2개를 겹쳐서 사용해야 함.(판별함수, 출력함수), return은 if와 같은 세로라인에 들어가지 않음.
    #----------------------------------------------------------------------------
elif Q_number == 7:
    # [ Q7 ]
    # 아래 그림처럼 *을 출력하는 코드를 작성하세요.
    # [ A7 ]
    for i in range(1,6):
        print(("%5s") %('*'*i)) # 문법: ("%s") %(넣을 문자),%와 s 사이 숫자 만큼 정렬함.(양수)오른쪽 정렬, (음수)왼쪽 정렬
    for i in range(1, 6):
        print("{:>5}".format("*"*i)) # 문법: "{}". format(),""안에 (: 방향 숫자)만큼 정렬, 방향 앞에 공백 대신 문자넣으면 대신 들어감.
    #-----------------------------------------------------------------------------
elif Q_number ==8:
    # [ Q8 ]
    # 숫자와 콤마로만 이루어진 문자열 S가 주어진다.
    # 이때, S에 포함되어 있는 자연수의 합을 구하는 프로그램을 작성하시오.
    # ( 예 :  123,42,98,18 입력  )
    # [ A8 ]
    S="123,42,98,18"

    result=0
    for i in S:
        if i==",": continue
        result=result+int(i)
    print(f"{S}의 한자리 자연수들의 합: {result}")

    S = "123,42,98,18"
    S=S.split(',')
    result=0
    for i in S:
        result=result+int(i)
    print(f"{S}의 자연수 합: {result}")

    S = "123,42,98,18"
    S = S.split(',')
    count=0
    result=0
    while count<len(S):
        result=result+int(S[count])
        count=count+1
    print(f"{S}의 자연수 합: {result}")
    # 막힌 부분) split 사용법, 콤마 없애기
    # 해결) if i==",": continue 조건을 통해 콤마를 제거하거나
    #      S = S.split(',') 로 콤마 제거 (split은 사용후 자동 리스트 모드로 전환됨)
    #      split은 위 처럼 다시 변수에 저장해야함.
    #------------------------------------------------------------------------------
elif Q_number==9:
    # [ Q9 ]
    # 입력된 영단어가 팰린드롬이면 1, 아니면 0을 출력하는 프로그램을 작성하세요.
    # *팰린드롬: 거꾸로 읽어도 제대로 읽는 것과 같은 문장이나 낱말, 숫자, 문자열.
    # ( 예 :  level, noon => 1,  run, apple =>0 )
    # [ A9 ]
    user=input( "영단어 입력: ") # (list).reverse()---> list여야 reverse사용 가능.
    english1=list(user)        # (list).reverse()---> reverse를 사용 시 원본(user)가 변하므로  english1,2로 따로 저장 후
    english2=list(user)                             # english2만 reverse 취함.
    english2.reverse()         # (list).reverse()---> 결과값을 불러오는 메서드가 아니므로  저장 따로할 필요X
    print(english1)
    print(english2)
    if english1 == english2:
        print(1)
    else:
        print(2)
    # 막힌 부분) 문자열 뒤집기:  메서드 사용법
    # 해결) .reverse() 사용: srt형태 불가능 -?> list여야 사용가능
    #      .reverse() 는 변수 원본이 변하므로 비교할 변수를 각각 만들어서 하나만 적용해야 함.
    #      .reverse() 는 결과값을 불러오지 않으므로 실행시 따로 저장할 필요 없음.
    #----------------------------------------------------------------------------------------------------------
elif Q_number==10:
    # [ Q10 ]
    #  *(애스터리스크)로 아래 출력 결과와 동일한 Tree(트리)를 만드시오.
    # [ A10 ]

    #5층 피라미드 만들기

    for i in range(5):             # range(n)  ---> range(0,n-1)
        for j in range(5-1,i,-1):  # 공백 만들기 ---> 공백이 원하는 값보다 하나 많으므로 5-1,
                                   # (4,i,-1)  ---> 첫째 for:i=0,1,2,3,4-> 둘쨰 for:i=0,1,2,3 | 1바퀴:4->(0+1)까지:4번. 2바퀴:4->(0+1)까지 :3번...(횟수=갯수_
            print(" ",end="")      # (x,y,-1)  ---> 큰 값에서 작은 값으로 가므로 -1씩 감소해줘야 유효동작.

        for j in range((i+1)*2-1): # 별 찍기    ---> i+1: 제일 윗줄부터 출력하기 위함, *2:양쪽 대칭 만들기, -1: 각 줄을 홀수 갯수로 하기 위함.
            print("*",end="")      # ,end=""   ---> 기본값인 줄바꿈을 제거.
        print()                    # 내부의 for문 2개가 한번씩 동작을 마치면 전체 줄바꿈 명령(안하면 계속 줄바꿈 없음.)

    # 트리 줄기 만들기
    for k in range(4):
        for l in range(4):
            print(" ",end="")
        for l in range(1):
            print("*",end="")
        print()

    # 10번 문제(트리) 10층 피라미드 + 두께3 줄기 ->for문 6개?
    for i in range(10):
        for j in range(10-1,i,-1):
            print(" ",end="")
        for j in range((i+1)*2-1):
            print("*",end="")
        print()

    for k in range(3):        #---> 줄기 층수 결정
        for l in range(8):    #---> 줄기 공백 갯수 결정
            print(" ",end="")
        for l in range(3):    #---> 줄기 두께 갯수 결정
            print("*",end="")
        print()
    #-----------------------------------------------------------------------------------------------------------
elif Q_number==11:
    # [ Q11 ]
    # 피보나치 수열을 구현하세요.
    # 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는
    # 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.
    # 이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.
    # n=17일때 까지 피보나치 수를 써보면 다음과 같다.
    # 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597
    # n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.
    # [ A11 ]
    user=int(input("구할 n번째 피보나치 수열: "))
    result=[0,1]    #---> 0+1은 고정이므로
    count=0
    while count<user-2: #---> 불필요한 계산을 줄이기 위해.구하는 숫자까지만 계산
        a=result[0 + count] + result[1 + count] #--->Fn = Fn-1 + Fn-2 (n ≥ 2)
        result.append(a)
        count=count+1
    print(f"피보나치 수열:{result}")
    print(f"n번째 피보나치 수열 값:{result[user-1]}") #--> 인덱스가 0부터 시작하므로 n번째 => n-1인덱스


    #--------------------------------------------------------------------------------
elif Q_number==12:
    # [ Q12 ]
    # 3개의 정수를 입력 받아서 가장 큰 수, 가장 작은 수를 출력하는 함수를 구현하세요.
    # [ A12 ]
    user=(input("정수 3개 입력: "))
    result = user.split(",")
    print(result)
    a0=result[0]
    a1=result[1]
    a2=result[2]
    print(f"가장 큰 수:{max(a0,a1,a2)}") #---> str인데 이게 되네?
    print(f"가장 작은 수:{min(a0,a1,a2)}")
    #----------------------------------------------------------------------------
elif Q_number==13:
    # [ Q13 ]
    # 문자열 리스트를 입력 받아서 오름차순 결과 가장 낮은 문자열과 가장 높은 문자열을
    # 출력하는 함수를 구현하세요.
    # [ A13 ]
    # < 문자 낱개 단위 >
    user=list(input("문자열 리스트 입력:"))
    user.sort()  #---> .sort(): 정렬은 list method
    print(f"가장 낮은 문자:{user[0]}\n가장 높은 문자:{user[-1]}")
    #< 문자열 단위 >
    user = input("문자열 리스트 입력:")
    user=user.split(",")
    user.sort()
    print(f"가장 낮은 문자열:{user[0]}\n가장 높은 문자열:{user[-1]}")
    #--------------------------------------------------------------------------
elif Q_number==14:
    # [Q14]
    # 입력된 문자열에서 대문자는 소문자로, 소문자는 대문자로 변환하여 결과를 반환하는
    # 함수를 구현하세요.
    # (예: ‘GooD’  ==> ‘gOOd“)
    # [A14]
    user=input("문자 입력:")
    print(f"대소문자 변환:{user.swapcase()}")
    # 막힌 부분) .upper(),.lower() 사용해서 for문으로 문자 받고 조건식으로 하려함.
    # 해결) .swapcase() : 함수가 따로 있었음.
    #-------------------------------------------------------------------------
elif Q_number==15:
    # [ Q15 ]
    # 아래 데이터를 저장 후 키에 따른 정렬 결과를 출력해 주세요.
    # 마징가  187.5  91
    # 베트맨  174.9  102.3
    # 홍길동  192    72
    # 가가멜  167.2  89.3
    # 조건) dict 타입으로 첫 번째 컬럼이 키가 되고 나머지 데이터는 값
    # [ A15 ]
    datas={"마징가":(187.5,91),"베트맨":(174.9,102.3),"홍길동":(192,72),"가가멜":(167.2,89.3)}
    print(type(datas),"\n",datas)
    #--------------------------------------------------------------------------
elif Q_number==16:
    # [ Q16 ]
    # 1 이상의 자연수 n을 받았을 때 해당 수의 약수들을 구하는 함수를 구현하세요.
    # 약수들은 리스트 형태로 숫자 크기 순서대로 출력합니다.
    # [ A16 ]
    user=int(input("자연수 입력:"))
    result=[]
    for i in range(1,user+1):
        if user%i==0:
            result.append(i)
    print(f"오름차순:{result}")
    print(f"내림차순:{sorted(result,reverse=True)}")
    # 막힌 부분) sorted, sort, reverse 헷갈림.
    # 해결)     .sort(), .reverse() : list전용 메서드로 결과값 없음. 원본 변화
    #           sorted() : list가 아니어도 가능. 결과값을 리스트로 반환해줌.
    #                      역 정렬 방법) sorted(x,reverse=True)
    #------------------------------------------------------------------------
elif Q_number==17:
    # [ Q17 ]
    # 문자열에 대한 압축 알고리즘을 함수로 구현하세요.
    # 컴퓨터에서 쓰이는 간단한 압축 알고리즘으로 Run-Length Encodig(RLE)방법은 예를 들
    # 면 다음과 같다. “aaaaabbbccccccddddddddd” 문자열에서 반복되는 문자의 패턴을 찾
    # 아 “a5b3c6d9”으로 표현한다. 문자열을 입력 받았을 때 RLE방법으로 구현된 값을
    # 반환하는 함수를 구현하세요.
    # [ A17 ]
    def RLE(user):
        n=len(user) #---> 입력받은 알파벳 총 갯수: 반복 횟수 결정
        i=0  #---> 인덱스는 0부터 시작함, n과 비교하여 반복횟수 결정
        while i <n: #---> 알파벳 종류당 한묶음씩 출력해야 함.
            count=1 #---> 알파벳 개수 기본값 = 1(알파벳 달라지면 1을 다시 기본값으로)
            while i<n-1 and user[i]==user[i+1]: #---> (n의 갯수 -1)번 비교하면 중복을 모두 찾을 수 있음., 처음 인덱스 두개 비교
                count+=1 #---> 같을 경우 알파벳 개수 추가.
                i+=1 #---> 그 다음 인덱스 두개를 비교
            i+=1 # 중복된 알파벳 넘어서 그 다음 인덱스를 지목하기 위해.
            print(user[i-1]+str(count),end="") #---> 알파벳+횟수+엔터제거
    RLE(input("알파벳 입력:"))
    # 막힌 부분) 2중 조건문
    # 해결) 알파벳 종류당 반복문 + 반복여부 확인 반복문 (while+while)
    #      횟수 관련 변수: n,i,count 활용 중요함.
    #----------------------------------------------------------------------------------
elif Q_number==18:
    # [ Q18 ]
    # 문자열을 입력하면 UTF-8로 인코딩된 값을 출력된 함수를 구현해 주세요.
    #     예) “가나다” => 0b10101100000000000b10110000100110000b1011001011100100
    # [ A18 ]
    def UTF(user):
        for i in user:
            code=ord(i)
            print(bin(code),end="")
    UTF(input("문자열 입력: "))
    # 막힌 부분) 인코딩 함수 생각 안남.
    # 해결) ord()=> 문자열 하나만 인코딩되므로 for문으로 하나씩 삽입 시도.
    #----------------------------------------------------------------------------
elif Q_number == 19:
    pass
    # [ Q19 ]
    # 양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.
    # 어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.
    # < 입력 >
    # 첫째 줄에 N의 진짜 약수의 개수가 주어진다. 이 개수는 50보다 작거나 같은 자연수다.
    # 둘째 줄에는 N의 진짜 약수가 주어진다. 1,000,000보다 작거나 같고, 2보다 크거나
    # 같은 자연수이고, 중복되지 않는다.
    # < 출력 >
    # 첫째 줄에 N을 출력한다
    # (예 :  약수 개수 입력 :  2
    #       약수 입력 : 2 3
    #       결 과 :  6  )
    # [ A19 ]
    # ★ 모르겠는데;;
elif Q_number == 20:
    # [ Q20 ]
    # 주사위 2개를 던졌을 때, 모두 짝수 또는 모두 홀수인 경우를 판별하는 프로그램을
    # 구현하세요. 그리고 승부여부, 동일여부도 출력하세요.
    # [ A20 ]
    for i in range(1,7):
        for j in range(1,7):
            if (i%2==0 and j%2==0) or (i%2 != 0 and j%2 != 0):
                if i>j:
                    print(f' ({i},{j}) 승부 여부:({i}>{j})')
                elif i<j:
                    print(f' ({i},{j}) 승부 여부:({i}<{j})')
                else:
                    print(f' ({i},{j}) 승부 여부:({i}={j})')

    # 막힌 부분) Q_number에 영향주는지 들여쓰기 잘못되었다고 나옴, 콘솔에서는 정상동작
    # 해결) 19번 문제 못풀어서 elif Q_number==19만 해놔서 오류난 걸로 추정.지우니까 해결됨.
    #      조건문 완결못했을 때  pass 해줘야 다음 걸로 넘어감.
    #-----------------------------------------------------------------------------------
elif Q_number == 21:
    # [ Q21 ]
    # 여러 단위의 동전들이 주어져 있을때 거스름돈을 가장 적은 수의 동전을 교환해주는
    # 코드를 작성하세요.
    # 각 단위의 동전은 무한정 쓸 수 있다.
    # < 입력설명 >
    # 첫 번째 줄에는 동전의 종류개수 N(1<=N<=12)이 주어진다.
    # 두 번째 줄에는 N개의 동전의 종류가 주어진다.
    # 세 번째 줄에는 거슬러 줄 금액 M(1<=M<=500)이 주어진다.
    # 각 동전의 종류는 100원을 넘지 않는다.
    # < 출력설명 >
    # 첫 번째 줄에 거슬러 줄 동전의 최소개수를 출력한다.
    # ------- 예시 -------
    # ▣ 입력예제 1
    # 	동전 종류 개수 : 3
    #  	동전 	 종류 : 1 2 5
    #   거스럼    금액 : 15
    # ▣ 출력예제 1
    #   거스럼 동전 개수 : 3
    #   설명 : 5 5 5 동전 3개로 거슬러 줄 수 있다.
    # [ A21 ]
    nums= int(input("동전 종류 개수(1~12):"))
    kind = input("동전 종류 (1~100):")
    kind=kind.split()
    money = int(input("거스름돈(1~500):"))
    i=0

    if money%int(max(kind))==0:
        print(f"거스름 동전 개수: {money//int(max(kind))}")
    else:
        while len(kind)>0:
            i =i+(money//int(max(kind)))
            money = money%int(max(kind))
            #print(f"현재 계산한 동전종류:{max(kind)}")
            #print(f"지금까지 계산된 동전 개수:{i}")
            #print(f"남은 거스름돈:{money}")
            kind.remove(max(kind))

        print(f'거스름 동전 개수: {i}')
    # 막힌 부분) remove사용법, out of range오류
    # 해결) len(kind)>0 으로 설정하여 kind 리스트 내에 모든 요소 삭제시 종료되도록 함.
